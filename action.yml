name: 'Compile Arduino Sketches'
description: 'Checks whether Arduino sketches will compile and produces a report of data from the compilations'
inputs:
  cli-version:
    description: 'Version of Arduino CLI to use when building'
    default: 'latest'
    required: true
  fqbn:
    description: 'Full qualified board name, with Boards Manager URL if needed'
    default: 'arduino:avr:uno'
    required: true
  libraries:
    description: 'YAML-format list of library dependencies to install'
    default: '- source-path: ./'
    required: true
  platforms:
    description: 'YAML-format list of platform dependencies to install'
    default: ''
    required: true
  sketch-paths:
    description: 'YAML-format list of paths containing sketches to compile.'
    default: '- examples'
    required: true
  cli-compile-flags:
    description: 'YAML-format list of flags to add to the Arduino CLI sketch compilation command.'
    default: ''
    required: false
  verbose:
    description: 'Set to true to show verbose output in the log'
    default: 'false'
    required: true
  sketches-report-path:
    description: 'Path in which to save a JSON formatted file containing data from the sketch compilations'
    default: 'sketches-reports'
    required: true
  github-token:
    description: 'GitHub access token used to get information from the GitHub API. Only needed if you are using the deltas report feature in a private repository.'
    default: ''
    required: true
  enable-deltas-report:
    description: 'Set to true to cause the action to determine the change in memory usage and compiler warnings of the compiled sketches between the head and base refs of a PR and the immediate parent commit of a push'
    default: 'false'
    required: true
  enable-warnings-report:
    description: 'Set to true to cause the action to record the compiler warning count for each sketch compilation in the sketches report'
    default: 'false'
    required: true
  target:
    description: 'Sets the target to recognise if sketch compilation should be skipped'
    default: ''
    required: true
  use-json-file:
    description: 'Sets if JSON file will be an imput for libraries and sketches to compile'
    default: 'false'
    required: true
  json-path:
    description: 'If JSON file is used as input, this sets the path to the JSON file'
    default: ''
    required: true
  exit-on-fail:
    description: 'Exit action and throw error, if some sketch fails to compile'
    default: 'false'
    required: false

runs:
  using: composite
  steps:
    - name: Run the set up script
      id: setup
      shell: bash
      run: |
        # Group action setup log output
        echo "::group::Action set up"
        "${{ github.action_path }}/action-setup.sh"
        echo "::endgroup::"

    - name: Run script
      shell: bash
      env:
        INPUT_CLI-VERSION: ${{ inputs.cli-version }}
        INPUT_FQBN: ${{ inputs.fqbn }}
        INPUT_LIBRARIES: ${{ inputs.libraries }}
        INPUT_PLATFORMS: ${{ inputs.platforms }}
        INPUT_SKETCH-PATHS: ${{ inputs.sketch-paths }}
        INPUT_CLI-COMPILE-FLAGS: ${{ inputs.cli-compile-flags }}
        INPUT_VERBOSE: ${{ inputs.verbose }}
        INPUT_GITHUB-TOKEN: ${{ inputs.github-token }}
        INPUT_ENABLE-DELTAS-REPORT: ${{ inputs.enable-deltas-report }}
        INPUT_ENABLE-WARNINGS-REPORT: ${{ inputs.enable-warnings-report }}
        INPUT_SKETCHES-REPORT-PATH: ${{ inputs.sketches-report-path }}
        INPUT_TARGET: ${{ inputs.target }}
        INPUT_USE-JSON-FILE: ${{ inputs.use-json-file }}
        INPUT_JSON-PATH: ${{ inputs.json-path }}
      run: |
        source "${{ steps.setup.outputs.python-venv-activate-script-path }}"
        "${{ steps.setup.outputs.python-command }}" "${{ github.action_path }}/compilesketches/compilesketches.py"
